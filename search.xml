<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人博客网站搭建与优化</title>
      <link href="/posts/eacfc4c8/"/>
      <url>/posts/eacfc4c8/</url>
      
        <content type="html"><![CDATA[<p><code>更新：2023.01.21 / 评论系统待修复</code></p><h1 id="个人博客网站搭建与优化"><a href="#个人博客网站搭建与优化" class="headerlink" title="个人博客网站搭建与优化"></a>个人博客网站搭建与优化</h1><h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>搭建一个公网可访问的个人网站。</p><h2 id="组成："><a href="#组成：" class="headerlink" title="组成："></a>组成：</h2><p>服务器：GitHub仓库（免费）<br>域名：<a href="http://xxxxx.github.io(免费)/">http://xxxxx.github.io（免费）</a><br>版本管理器（控制台）：Git<br>网站框架：Hexo（基于Node.js）<br>网站模板：Buttefly</p><h2 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h2><h3 id="获取服务器-amp-域名："><a href="#获取服务器-amp-域名：" class="headerlink" title="获取服务器&amp;域名："></a>获取服务器&amp;域名：</h3><p>注册GitHub账号，新建Repository，命名为“你的帐号名.github.io”GigtHub会自动创建一个个人网站页面，页面的URL就是“你的帐号名.github.io”。进入仓库，在Setting→Page可以看到。在下方选个主题你就可以去自己的站看看了。这是GitHub自带的一个功能。到此服务器和域名就搞定了。</p><h3 id="安装版本管理器（控制台）"><a href="#安装版本管理器（控制台）" class="headerlink" title="安装版本管理器（控制台）"></a>安装版本管理器（控制台）</h3><p>下载地址:<a href="https://git-scm.com/download/win">git download</a>安装对话框步骤：</p><ol><li>选择需要安装的组件，默认即可，推荐勾选下方(NEW!) Add a Git Bash Profile to Windows Terminal</li><li>选择默认编辑器，我选择的VSCode，需要提前安装好。</li><li>调整新存储库中初始分支的名称，默认即可，将会使用master作为默认的分支。</li><li>添加 Git 环境变量，选择默认配置。</li><li>选择 OpenSSH 客户端程序，选择默认使用 Git 自带的 OpenSSH 。</li><li>选择 HTTPS 传输后端，选择默认使用OpenSSL库。</li><li>配置 Git 文件的行末换行符，选择默认的第一个。</li><li>配置终端模拟器，选择默认的。</li><li>选择Git pull 合并的模式，选择默认的。</li><li>选择 Git 的凭据管理器，选择默认的跨平台的凭据管理器。</li><li>配置额外选项，默认。</li><li>配置实验选项，点击 Install。</li><li>安装完成。打开cmd输入<br><code>git --version</code><br>查看版本信息。如有额外兴趣和需要的话：廖雪峰老师的 Git教程。</li></ol><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>安装安装Node.js才能使用Git。下载地址:<a href="https://nodejs.org/zh-cn/download/">nodejs download</a></p><ol><li>单击下一步</li><li>第一个“Node.js runtime”</li><li>不勾选安装其他插件</li><li>安装完成。打开cmd输入<br><code>node -v</code><br><code>npm -v</code><br>查看版本信息。</li></ol><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>新建文件夹，作为Hexo个人网站的根目录。文件夹内右键选择“Git Bash here”打开Git Bash终端。<br>以下命令均在Hexo 根目录下Git Bash终端内输入:<br><code>npm install hexo-cli -g</code><br>开始安装hexo，如果报错，找到C盘下的用户目录删除隐藏文件.npmrc文件<br>检查Hexo版本：<br><code>hexo -v</code><br>初始化Hexo（这一步会将hexo的文件复制到你的博客文件夹中去）<br><code>hexo init</code><br>安装其他插件：<br><code>npm install</code><br>创建本地个人网站。输入：<br><code>hexo g</code><br>生成hexo默认的静态页面，然后输入：<br><code>hexo s</code><br>命令启动本地服务器。在浏览器打开 <a href="http://localhost:4000/">http://localhost:4000/</a> 页面，可以看见自己创建的本地个人网站。这个网站用的是Hexo默认的网站模板。</p><h3 id="安装Butterfly主题模板"><a href="#安装Butterfly主题模板" class="headerlink" title="安装Butterfly主题模板"></a>安装Butterfly主题模板</h3><p>以下命令均在Hexo 根目录下Git Bash终端内输入。</p><p>稳定版安装Butterfly主题：Hexo 根目录下打开Git Bash终端，输入：</p><p><code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</code></p><p>然后打开 Hexo 根目录下的“_config.yml”文件 修改“theme”字段后面的值为“butterfly”。保存。</p><pre><code># Extensions 扩展## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: butterfly # 当前主题名称安装插件：pug 以及 stylus 渲染器。</code></pre><p><code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code><br>下面步骤用于检查安装是否成功：</p><p>清除缓存：<br><code>hexo clean</code><br>生成页面文件：<br><code>hexo g</code><br>启动本地网站服务：<br><code>hexox s</code><br>启动后在 <a href="http://localhost:4000/">http://localhost:4000/</a> 中查看应用好的主题。Ctrl+C关闭服务。</p><p>至此，以Hexo为框架，应用Butterfly模板的本地个人网站部署完毕。</p><h3 id="使用SSH与服务器通信"><a href="#使用SSH与服务器通信" class="headerlink" title="使用SSH与服务器通信"></a>使用SSH与服务器通信</h3><p>以下命令均在Hexo 根目录下Git Bash终端内输入。</p><p>设置用户名/邮箱<br><code>git config --global user.name &quot;GitHub用户名&quot;</code><br><code>git config --global user.email &quot;GitHub注册邮箱&quot;</code><br>生成ssh密匙<br><code>ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot;</code><br>执行过程中按要求操作。要求输入密码可以直接回车默认空。</p><p>执行完毕会在“电脑C盘用户文件夹”生成”.ssh”文件夹，里面有刚出生的两个文件。<br>“id_rsa”是本机的私人秘钥，简称私钥。<br>“id_rsa.pub”是公共秘钥，简称公钥。</p><p>将ssh公钥添加到GitHub:</p><p>用编辑器打开”id_rsa.pub”复制所有内容，打开GitHub网页页面，点击用户头像→Settings→SSH and GPG keys→New SSH key→将复制的内容粘贴到Key文本框中，标题随意。然后点击Add SSH key按钮。</p><p>当你将本地网站文件通过Git传输到GitHub上时，它会根据公钥匹配你的私钥，相当于输密码。总之，这一步的作用就是以后将本地部署至github仓库时候省去输密码的步骤。</p><p>检查连接</p><p><code>ssh -T -v git@github.com</code></p><p>看到这个“Hi 你的github帐号名” 就表示ssh匹配成功<br>如遇到下图情况，需要在第一次回车确认时输入”yes”再回车。</p><p>遇到<code>connect to host github.com port 22: Permission denied</code>多半是撞到杀软和防火墙。如果是端口问题，在”.ssh”文件夹中新建”config”文件，输入以下内容，将接入端口设置为443。</p><pre><code>Host github.com  User 你的GitHub注册邮箱  Hostname ssh.github.com  PreferredAuthentications publickey  IdentityFile ~/.ssh/id_rsa  Port 443</code></pre><p>更多问题可以看官方指南 使用 SSH 连接到 GitHub - GitHub Docs</p><h3 id="部署文件至GitHub仓库"><a href="#部署文件至GitHub仓库" class="headerlink" title="部署文件至GitHub仓库"></a>部署文件至GitHub仓库</h3><p>部署之前先把github仓库里默认的branch：”main”修改为”master”。</p><p>打开Hexo 根目录的“_config.yml”文件，在文件最后一行找到以下字句并补充。</p><p>  deploy:<br>    type: git<br>    repo: <a href="mailto:&#103;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;">&#103;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;</a>:你的github帐号名/你的github帐号名.github.io.git<br>    branch: master</p><p>这一步就是告诉hexo把你的文件推到你仓库中的哪个分支去。</p><p>安装deploy-git命令包（不安装就没法用部署命令）:<br><code>npm install hexo-deployer-git</code><br>清除缓存文件<br><code>hexo clean</code><br>就是清空上次部署时生成的文件，第一次不用输，以后每次部署前输入。<br>生成静态页面<br><code>hexo g</code><br>部署<br>当执行<code>hexo d</code>时，Hexo 会将public目录中的文件和目录推送至_config.yml中指定的远端仓库和分支中，并且完全覆盖该分支下的已有内容。<br><code>hexo d</code><br>显示<code>INFO Deploy done: git</code>就是完成部署，检查一下执行日志有无异常。</p><p>【注】遇到<code>ERROR Deployer not found: git</code>报错是因为部署插件没安装，再安装一下:<br><code>npm install --save hexo-deployer-git</code><br>【注】第一次可能会遇到”warning: LF will be replaced by CRLF in ……”问题，是因为windows中的换行符为 CRLF ， 而在linux下的换行符为 LF，所以出现符号转义问题，输入以下命令将自动转换关闭就行：<br><code>git config --global core.autoCRLF false</code><br>【注】遇到“(node:87224) Warning: Accessing non-existent property ‘column’ of module exports inside circular dependency”等一系列类似node问题。重装hexo-renderer-stylus：<br><code>npm remove hexo-renderer-stylus</code><br><code>npm add hexo-renderer-stylus</code><br>打开个人网站的URL（“你的帐号名.github.io”）就可以在公网访问自己的网站了。</p><h2 id="网站设置："><a href="#网站设置：" class="headerlink" title="网站设置："></a>网站设置：</h2><p>网站设置主要配置两个文件，一个是Hexo 根目录下的“_config.yml”文件，一个是Hexo根目录→themes→butterfly文件夹下的“_config.yml”文件。</p><p>为方便管理，可以在Hexo 根目录下，新建一个“_config.butterfly.yml”，将butterfly文件夹下的“_config.yml”文件内容复制到“_config.butterfly.yml”文件里，原文件内容不用变，文件也不要删。Hexo会自动加载“_config.butterfly.yml”文件的内容替代_config.yml”文件内容。</p><p>打开 Hexo 根目录下的“_config.yml”文件。</p><pre><code>title:                           # 网站标题（显示在浏览器标题栏）subtitle: &#39;&#39;                     # 网站副标题(显示在标题后面)description: &#39;&#39;                  # 网站描述 要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。keywords:                        # 网站关键词author:                          # 网站所有者，还用于主题显示文章的作者language: zh-CN                  # 网站语言 en, zh-CNtimezone: &#39;Asia/Shanghai&#39;        # 网站时区 Asia/Shanghai, America/New_York, Japan, UTCemail:                           # 个人邮箱# url 此部分使用了文章永久链接美化插件详见https://butterfly.js.org/url:                               # 网址，例如你使用 GitHub Page, 就在url 填入 &#39;https://username.github.io/project&#39;permalink: posts/:abbrlink/        # 文章的永久链接格式 默认 :year/:month/:day/:title/permalink_defaults:                # 永久链接中各部分的默认值pretty_urls:                       # 改写permalink来美化文章永久链接  trailing_index: true             # 是否在永久链接中保留尾部的 index.html，设置为 false 时去除  trailing_html: true              # 是否在永久链接中保留尾部的 .html, 设置为 false 时去除abbrlink:                          # 文章随机永久链接设置  alg: crc32                       # 文章随机链接位数 十六位或三十二位  rep: hex                         # 文章随机链接显示方式 十进制或十六进制# Directory（不建议修改）source_dir: source                 # 资源文件夹，这个文件夹用来存放内容public_dir: public                 # 公共文件夹，这个文件夹用于存放生成的站点文件tag_dir: tags                      # 标签文件夹archive_dir: archives              # 归档文件夹category_dir: categories           # 分类文件夹code_dir: downloads/code           # Include code 文件夹，source_dir 下的子目录i18n_dir: :lang                    # 国际化（i18n）文件夹skip_render:                       # 跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 public 目录中。您可使用 glob 表达式来匹配路径# Writing 文章new_post_name: :title.md           # 新文章的文件名称default_layout: post               # 预设布局auto_spacing: false                # 在中文和英文之间加入空格titlecase: false                   # 把标题转换为 title caseexternal_link:                     # 链接设置  enable: true                     # 在新标签中打开链接  field: site                      # 对整个网站（site）生效或仅对文章（post）生效  exclude: &#39;&#39;                      # 需要排除的域名。主域名和子域名如 www 需分别配置filename_case: 0                   # 把文件名称转换为 1：小写， 2： 大写，0：不转换render_drafts: false               # 显示草稿post_asset_folder: false           # 启动 Asset 文件夹relative_link: false               # 把链接改为与根目录的相对位址future: true                       # 显示未来的文章highlight:                         # 代码块的设置, 请参考 Highlight.js 进行设置  enable: true  line_number: true  auto_detect: false  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:                           # 代码块的设置, 请参考 PrismJS 进行设置  enable: false  preprocess: true  line_number: true  tab_replace: &#39;&#39;# 主页设置index_generator:  path: &#39;&#39;  per_page: 10   order_by: -date # 分类和标签设置default_category: uncategorized   # 默认分类 uncategorizedcategory_map:                     # 分类别名tag_map:                          # 标签别名# Metadata elements## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/metameta_generator: true# 日期时间格式date_format: YYYY-MM-DD            # 日期格式time_format: HH:mm:ss              # 时间格式## updated_option supports &#39;mtime&#39;, &#39;date&#39;, &#39;empty&#39;## mtime: 使用文件的最后修改时间。这是从 Hexo 3.0.0 开始的默认行为。## date: 使用 date 作为 updated 的值。可被用于 Git 工作流之中，因为使用 Git 管理站点时，文件的最后修改日期常常会发生改变## empty: 直接删除 updated。使用这一选项可能会导致大部分主题和插件无法正常工作。updated_option: &#39;mtime&#39;            # 当 Front Matter 中没有指定 updated 时 updated 的取值# 分页per_page: 10                       # 每页显示的文章量 (0 = 关闭分页功能)pagination_dir: page               # 分页目录# 让 Hexo 进行处理或忽略某些目录和文件夹## include:/exclude: options only apply to the &#39;source/&#39; folderinclude:         # Hexo 默认会不包括 source/ 下的文件和文件夹（包括名称以下划线和 . 开头的文件和文件夹，Hexo 的 _posts 和 _data 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 source 目录下。exclude:         # Hexo 不包括 source/ 下的这些文件和目录ignore:          # Hexo 会忽略整个 Hexo 项目下的这些文件夹或文件# Extensions 扩展## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: butterfly # 当前主题名称# 此部分使用了katex数学公式扩展插件，详见https://butterfly.js.org/markdown:  plugins:    - plugin:      name: &#39;@neilsustc/markdown-it-katex&#39;      options:        strict: false# Deployment 部署## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type:  repo:   branch: </code></pre><p>打开 Hexo 根目录下的“_config.butterfly.yml”文件。</p><p>内容可以配置参考我的设置：（或者官网：Butterfly）</p><pre><code># 導航目錄menu:       # 设置网页菜单  首页: / || fas fa-home  文章||fas fa-book:    时间轴: /archives/ || fas fa-archive    标签: /tags/ || fas fa-tags    分类: /categories/ || fas fa-folder-open  资源库||fas fa-list:    照片: /Gallery/ || fas fa-images    音乐: /music/ || fas fa-music    电影: /movies/ || fas fa-video  留言板: /messageboard/ || fas fa-comment-dots    链接: /link/ || fas fa-link  关于: /about/ || fas fa-heartnav:                       # 导航栏设置  logo:                    # 网站的 logo，支持图片，直接填入图片链接  display_title: true      # 是否显示网站标题，填写 true 或者 false  fixed: false             # 是否固定状态栏，填写 true 或者 falsehighlight_theme: light        # 代码高亮主题  darker / pale night / light / ocean / mac / mac light / falsehighlight_copy: true          # 代码复制功能按钮highlight_lang: true          # 显示代码语言highlight_shrink: false       # true：代码框不展开，需点击 &#39;&gt;&#39; 打开 false：代码框展开，none：默认展开不显示展开收起按钮highlight_height_limit: false # 可配置代码高度限制，超出的部分会隐藏，并显示展开按钮。单位是 px，直接添加数字，如 200 pxcode_word_wrap: false         # 代码自动换行（取消横向滚动条）copy:                 # 复制版权信息  enable: true        # 是否开启网站复制权限  copyright:    enable: true      # 是否开启复制版权信息添加    limit_count: 50   # 当复制文字大于这个字数限制时，将在复制的内容后面加上版权信息post_copyright:       # 文章默认版权信息  enable: true   decode: false   author_href:   license: CC BY-NC-SA 4.0  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/# 如果有文章（例如：转载文章）不需要显示版权，可以在文章Front-matter单独设置：copyright: falsesocial: # 社交圖標設置  fab fa-github: https://github.com/xxxxxx || Github  fab fa-weibo: https://weibo.com/xxxxxx/home || 新浪微博  fab fa-zhihu: https://www.zhihu.com/people/xxxxxx || 知乎# 网页搜索框algolia_search:        # algolia搜索。你需要安装 hexo-algolia或 hexo-algoliasearch. 根据它们的説明文档去做相应的配置。  enable: false  hits:    per_page: 6local_search:          # 本地搜索 你需要安装 hexo-generator-search，根据它的文档去做相应配置  enable: true         # 是否开启本地搜索  preload: false       # 预加载，开启后，进入网页后会自动加载搜索文件。关闭时，只有点击搜索按钮后，才会加载搜索文件  CDN:                 # 搜索文件的 CDN 地址（默认使用的本地链接）# 数学公式katex:  enable: true    per_page: false       # true 表示每一頁都加載math.js，false 表示需要时加载，须在使用的Markdown Front-matter 加上 katex: true  hide_scrollbar: true# 在 hexo 根目录下卸载掉 marked 插件，安装 hexo-renderer-markdown-it# npm un hexo-renderer-marked --save # 如果有安装这个的话，卸载# npm un hexo-renderer-kramed --save # 如果有安装这个的话，卸载# npm i hexo-renderer-markdown-it --save # 需要安装这个渲染插件# npm install katex @renbaoshuo/markdown-it-katex # 需要安装这个katex插件#在 hexo 的根目录的 _config.yml 中配置：# markdown:#    plugins:#      - &#39;@renbaoshuo/markdown-it-katex&#39;# 图片设置 图片放在Hexo根目录source/images文件夹中# 页面顶部图的获取顺序：各自配置的 top_img &gt; 配置文件的 default_top_img# 文章页顶部图的获取顺序：各自配置的 top_img &gt; cover &gt; 配置文件的 default_top_imgfavicon: /images/favicon.png                # 網站圖標（浏览器页签显示）avatar:                  img: /images/avatar.png                   # 頭像  effect: false                             # 头像会一直转圈disable_top_img: false                      # 屏蔽页面顶部图index_img: /images/index.jpg                # 主页顶部图default_top_img: /images/default_top.jpg    # 各页面/文章默认顶部图archive_img:  /images/archive.jpg           # 归档页面的顶部图tag_img:  /images/default_tag.jpg           # 标签子页面的默认顶部图category_img:  /images/default_category.jpg # 分类子页面的默认顶部图tag_per_img:                                # 单独设置标签子页面顶部图，格式： tag name: xxxxxcategory_per_img:                           # 单独设置标资料页面顶部图，格式： category name: xxxxx# 标签页面的顶部图需要去source/tags/indes.md文件里修改# 分类页面的顶部图需要去source/categories/indes.md文件里修改cover:                                      # 文章封面设置  index_enable: true                        # 主页是否显示文章封面图  aside_enable: true                        # 侧栏是否显示文章封面图  archives_enable: true                     # 归档页面是否显示文章封面图  position: right                           # 主页卡片文章封面的显示位置，left：全部显示在左边，right：全部显示在右边，both：封面位置以左右左右轮流显示  default_cover:                            # 默认的 cover, 可配置图片链接/顔色/渐变色等，多张默认图片并列书写error_img:                                  # 网页中图片无法加载时显示的默认图片  flink: /images/friend_404.gif  post_page: /images/404.jpgerror_404:                                  # 404 页面  enable: true   subtitle: &#39;Page Not Found&#39;  background: https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.pngbackground: url(/images/background.jpg)        # 網站背景图可設置圖片或者顔色# 留意: 如果你的网站根目录不是&#39;/&#39;,使用本地图片时，需加上你的根目录。# 例如：网站是 https://yoursite.com/blog,引用一张img/xx.png图片，则设置background为 `url(/blog/img/xx.png)enter_transitions: true                     # 開啓網頁進入效果# 文章相关信息显示post_meta:   page:                        # 主页下的文章卡片显示    date_type: created         # 主頁文章日期是創建日或者更新日或都顯示    date_format: date          # 顯示日期還是相對日期    categories: true           # 主頁是否顯示分類    tags: true                 # 主頁是否顯示標籤    label: true                # 顯示描述性文字  post:                        # 文章页的显示    date_type: both            # 文章頁日期是創建日或者更新日或都顯示    date_format: date          # 顯示日期還是相對日期    categories: true           # 文章頁是否顯示分類    tags: true                 # 文章頁是否顯示標籤    label: true                # 顯示描述性文字toc:                           # 文章目录  post: true                   # 文章页是否显目录  page: false                  # 普通页面是否显示目录  number: true                 # 是否显示章节数  expand: true                # 是否展开目录  style_simple: false          # 简洁模式（侧边栏只显示目录, 只对文章页有效 ）  scroll_percent: true         # 是否显示滚动进度百分比wordcount:                     # 字數統計  enable: true  post_wordcount: true  min2read: true  total_wordcount: trueindex_post_content:            # 主页文章展示节选设置 1：只显示description（需要在文章front-matter里写好description），2：优先选择description，如果没有配置description，则显示自动节选的内容，3：只显示自动节选，4：不显示文章内容  method: 3   length: 500                  # 如果选择2或3，需要填这个reward:                        # 文章打赏  enable: false  QR_code:                     # 二维码    - img: /img/wechat.jpg     # 微信收款码      link:      text: 微信    - img: /img/alipay.jpg     # 支付宝收款码      link:      text: 支付宝related_post:                  # 设置推荐相关文章  enable: true  limit: 6                     # 显示推荐文章数目  date_type: created           # 文章日期顯示創建日或者更新日noticeOutdate:                 # 文章更新提醒  enable: true  style: flat                  # 类型: simple/flat  limit_day: 30                # 距离更新时间多少天才显示文章过期提醒  position: top                # 显示位置: top/bottom  message_prev: 该文章已经有    # 天数之前的文字  message_next: 天没有更新了。  # 天数之后的文字post_edit:                     # 在文章标题旁边显示一个编辑按钮，点击会跳转到对应的链接去  enable: false                # url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/  url:                         # For example: https://github.com/jerryc127/butterfly.js.org/edit/main/source/post_pagination: 1             # 设置分页的逻辑 1: 下一篇显示的是旧文章，2: 下一篇显示的是新文章，false: 关闭分页显示photofigcaption: false         # 可开启图片Figcaption描述文字显示，优先显示图片的title属性，然后是alt属性。# 页脚footer_bg: true        # 页脚背景图片 留空或false表示显示默认的顔色，true表示显示跟 top_img 一样# img链接图片的链接，显示所配置的图片# 顔色(HEX值 - #0000FF；RGB值 - rgb(0,0,255)；顔色单词 - orange；渐变色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)）footer:                # 页脚文字设置。页脚自定义文本对于部分人需要写 ICP 的，也可以写在custom_text里: custom_text: &lt;a href=&quot;icp链接&quot;&gt;&lt;img class=&quot;icp-icon&quot; src=&quot;icp图片&quot;&gt;&lt;span&gt;备案号：xxxxxx&lt;/span&gt;&lt;/a&gt;  owner:      enable: true       # 显示所有者信息    since: 2020        # 显示网站起始年份  custom_text: We are time flires.&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://hexo.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo&quot; title=&quot;博客框架为Hexo&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://butterfly.js.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender&quot; title=&quot;主题采用butterfly&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://www.jsdelivr.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CDN-jsDelivr-orange?style=flat&amp;logo=jsDelivr&quot; title=&quot;本站使用JsDelivr为静态资源提供CDN加速&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub&quot; title=&quot;本站项目由Gtihub托管&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;logo=Claris&quot; title=&quot;本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可&quot;&gt;&lt;/a&gt;&lt;/p&gt;  copyright: false # Copyright of theme and framework# 右下角按钮translate:                       # 翻译按钮  enable: true  default: 繁                    # 默认按钮显示文字(网站是简体，应设置为&#39;default: 繁&#39;)  defaultEncoding: 2             # 网站默认语言，1: 繁体中文, 2: 简体中文  translateDelay: 0              # 延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0  msgToTraditionalChinese: &quot;繁&quot;  # 当文字是简体时，按钮显示的文字  msgToSimplifiedChinese: &quot;简&quot;   # 当文字是繁体时，按钮显示的文字darkmode:                        # 夜间模式按钮  enable: true  button: true                   # dark mode和 light mode切换按钮  autoChangeMode: 1              # 自动切换 1：跟随系统而变化，不支持的浏览器/系统将按照时间晚上6点到早上6点之间切换为 dark mode，2：只按照时间 晚上6点到早上6点之间切换为 dark mode,其余时间为light mode，false： 取消自动切换readmode: true                   # 阅读模式按钮，閲读模式下会去掉除文章外的内容，避免干扰閲读。只会出现在文章页面，右下角会有閲读模式按钮。rightside_scroll_percent: true   # 在回到顶部按钮显示滚动百分比rightside-bottom:                # 右下角按鈕距離底部的距離/默認單位為px)# 侧边栏aside:                          enable: true                # 开启側邊欄  hide: false                 # 自动隐藏側邊欄  button: true  mobile: true                # 手机页面（ 显示宽度 &lt; 768px ）是否显示侧边栏内容  position: left              # 侧边栏位置 left or right  display:                    # 侧边栏内容设置    archive: true             # 显示归档    tag: true                 # 显示标签    category: true            # 显示分类  card_author:                # 作者卡片设置    enable: true              # 在侧边栏开启作者卡片    description:              # 个人介绍    button:                   # 作者卡片下方连接按钮      enable: true      icon: fab fa-github      text: Follow Me      link: https://github.com/xxxxxxxx  card_announcement:          # 公告卡片设置    enable: true              # 开启公告    content: Hello! I&#39;m Z :)  # 公告内容  card_recent_post:           # 最新文章卡片设置    enable: true              # 开启最新文章卡片    limit: 3                  # 显示的最新文章数目，0为显示全部    sort: date                # date or updated    sort_order:               # Don&#39;t modify the setting unless you know how it works    card_categories:            # 分类卡片设置    enable: true              # 开启分类卡片    limit: 8                  # 显示的分类数目，0为显示全部    expand: none              # none/true/false    sort_order:               # 别改除非你懂  card_tags:                  # 标签卡片设置    enable: true              # 开启标签卡片    limit: 20                 # 显示的标签数目，0为显示全部    color: false    sort_order:               # 别改除非你懂  card_archives:              # 归档卡片设置    enable: true              # 开启归档卡片    type: yearly              # yearly or monthly    format: MMMM YYYY         # 例如: YYYY年MM月    order: -1                 # Sort of order. 1, asc for ascending; -1, desc for descending    limit: 8                  # if set 0 will show all    sort_order:               # 别改除非你懂  card_webinfo:    enable: true    post_count: true    last_push_date: true    sort_order:               # 别改除非你懂busuanzi:                     # 侧边栏显示訪問人數 busuanzi count for PV / UV in site  site_uv: true  site_pv: true  page_pv: trueruntimeshow:                  # 侧边栏显示網頁運行時間  enable: true  publish_date: 6/7/2020 00:00:00  # 网页发布时间newest_comments:              # 侧边栏最新评论  enable: false  sort_order:                 # 别改除非你懂  limit: 6                    # 显示的评论数量  storage: 10                 # 设置评论刷新缓存时间，单位：分钟  avatar: true                # 是否显示评论人的头像comments:                # 评论系统 Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/Artalk  use:  - Twikoo             #使用的评论，最多支持两个，不需要请留空。双评论不能是 Disqus 和 Disqusjs 一起，由于其共用同一个 ID，会出错。  text: true             # 是否显示评论服务商的名字  lazyload: false        # 是否为评论开启lazyload，开启后，只有滚动到评论位置时才会加载评论所需要的资源，评论数将不显示  count: false           # 是否在文章顶部显示评论数。livere、Giscus 和 utterances 不支持评论数显示  card_post_count: false # 是否在首页文章卡片显示评论数。gitalk、livere 、Giscus 和 utterances 不支持评论数显示# Twikoo评论 https://github.com/imaegoo/twikoo twikoo:  envId: https://vercel-phi-orcin.vercel.app/  region:  visitor: false  option:# 网站分析统计baidu_analytics: xxxxxxxxxxxxxxxxxxxx  # 百度统计 https://tongji.baidu.com/web/welcome/login# 插入外部代码 Hexo根目录source/css文件夹中新建css文件# Insert the code to head (before &#39;&lt;/head&gt;&#39; tag) and the bottom (before &#39;&lt;/body&gt;&#39; tag)# 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前inject:  head:   # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;   - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/card_bg.css&quot;&gt;    bottom:  # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;# 美化/效果theme_color:                 # 自定义主题色，可改大部分UI颜色。颜色值必须加双引号，如&quot;#000&quot;而不是#000。否则报错。  enable: true  main: &quot;#49B1F5&quot;  paginator: &quot;#00c4b6&quot;  button_hover: &quot;#FF7242&quot;  text_selection: &quot;#00c4b6&quot;  link_color: &quot;#99a9bf&quot;  meta_color: &quot;#858585&quot;  hr_color: &quot;#A4D8FA&quot;  code_foreground: &quot;#F47466&quot;  code_background: &quot;rgba(27, 31, 35, .05)&quot;  toc_color: &quot;#00c4b6&quot;  blockquote_padding_color: &quot;#49b1f5&quot;  blockquote_background_color: &quot;#49b1f5&quot;  scrollbar_color: &quot;#273649&quot;                   # 网页滚动条颜色  meta_theme_color_light: &quot;#faebd7&quot;  meta_theme_color_dark: &quot;#0d0d0d&quot;# 主页顶部图显示设置# default: 顶部图全屏显示, site-info的区域会居中显示。使用默认, 都无需填写（建议默认）index_site_info_top:       # 主页标题距离顶部距离  例如 300px/300em/300rem/10%index_top_img_height:      #主页top_img高度 例如 300px/300em/300rem，不能使用百分比# category和tag頁的UI設置category_ui:               # 留空或 index：代表跟首頁的UI一樣， default：代表跟archives頁面的UI一樣tag_ui:                    # 留空或 index：代表跟首頁的UI一樣， default：代表跟archives頁面的UI一樣# 网页背景特效display_mode: light               # 網站默認的顯示模式 light (default) / darkcanvas_ribbon:                    # 网页背景静态彩帶特效 See: https://github.com/hustcc/ribbon.js  enable: false  size: 150  alpha: 0.6  zIndex: -1  click_to_change: false          # 设置是否每次点击都更换綵带  mobile: false                   # false 手机端不显示 true 手机端显示canvas_fluttering_ribbon:         # 网页背景動態彩帶特效，好看的綵带背景，会飘动  enable: false  mobile: false                   # false 手机端不显示 true 手机端显示canvas_nest:                      # 特效 https://github.com/hustcc/canvas-nest.js  enable: false  color: &#39;0,0,255&#39;                #color of lines, default: &#39;0,0,0&#39;; RGB values: (R,G,B).(note: use &#39;,&#39; to separate.)  opacity: 0.7                    # the opacity of line (0~1), default: 0.5.  zIndex: -1                      # z-index property of the background, default: -1.  count: 99                       # the number of lines, default: 99.  mobile: false                   # false 手机端不显示 true 手机端显示# 打字效果 https://github.com/disjukr/activate-power-modeactivate_power_mode:  enable: true  colorful: true        # 冒光特效  shake: false          # 抖動特效  mobile: false# 鼠標點擊效果fireworks:         # 鼠標點擊效果: 煙火特效  enable: false  zIndex: 9999     # -1 or 9999，-1 代表烟火效果在底部 9999 代表烟火效果在前面  mobile: false    # false 手机端不显示 true 手机端显示click_heart:       # 鼠標點擊效果: 愛心  enable: false  mobile: false    # false 手机端不显示 true 手机端显示ClickShowText:     # 鼠標點擊效果: 文字  enable: false  text:    - I    - LOVE    - YOU  fontSize: 15px  random: false     # 文字随机显示  mobile: false     # false 手机端不显示 true 手机端显示# 美化頁面顯示 会改变ol、ul、h1-h5的样式beautify:  enable: false  field: post                # post：只在文章页生效，site：在全站生效  title-prefix-icon:         # &#39;\f0c1&#39;  title-prefix-icon-color:   # &#39;#F47466&#39;# 全局字体设置（非必要不要修改）font:  global-font-size:  code-font-size:  font-family:  code-font-family:# 左上角网站名字字体，主页居中网站名字字体。如不需要配置，请留空。如不需要使用网络字体，只需要把font_link留空就行blog_title_font:  font_link:  font-family:# The setting of divider icon (水平分隔線圖標設置)hr_icon:  enable: true  icon: # the unicode value of Font Awesome icon, such as &#39;\3423&#39;  icon-top:# 在主页中显示的网站副标题或者喜欢的座右铭。subtitle 會先顯示 source , 再顯示 sub 的內容subtitle:  enable: true  effect: false        # 打字效果。如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字  # 打字效果速度參數  startDelay: 300      # time before typing starts in milliseconds  typeSpeed: 150       # type speed in milliseconds  backSpeed: 50        # backspacing speed in milliseconds  loop: true           # 循環打字  source: false        # 是否調用第三方服務  # source: false 關閉調用  # source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/  # source: 2  調用一句網（簡體） https://yijuzhan.com/  # source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/  sub:     - Fly me to the moon.# 加載動畫 当进入网页时，因为加载速度的问题,出现等待时间，开启preloader后，会显示加载动画，等页面加载完，加载动画会消失。preloader:  enable: true   source: 1            # 是否調用第三方服務 1. fullpage-loading，2. pace (progress bar)  pace_css_url:        # pace theme (see https://codebyzach.github.io/pace/)# 图片大图查看模式。只能選擇一個 或者 兩個都不選# medium-zoom # https://github.com/francoischalifour/medium-zoommedium_zoom: false# fancybox # http://fancyapps.com/fancybox/3/fancybox: true注意文件中不要出现重复的指令。</code></pre><h2 id="网站优化："><a href="#网站优化：" class="headerlink" title="网站优化："></a>网站优化：</h2><h3 id="文章永久链接美化"><a href="#文章永久链接美化" class="headerlink" title="文章永久链接美化"></a>文章永久链接美化</h3><p>Hexo默认的静态URL格式是:year/:month/:day/:title，也就是按照年、月、日、标题来生成固定链接的。如<a href="http://xxx.yy.com/2020/07/06/hello-world%E5%A6%82%E6%9E%9C%E6%96%87%E4%BB%B6%E5%90%8D%E6%98%AF%E4%B8%AD%E6%96%87%E5%9C%A8%E8%A7%A3%E7%A0%81%E5%90%8E%E5%B0%B1%E6%98%AF%E4%B8%80%E5%A4%A7%E4%B8%B2%E3%80%82%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E8%A6%81%E4%B8%80%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E9%9A%8F%E6%9C%BA%E7%A0%81%E9%93%BE%E6%8E%A5%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8abbrlink%E8%BF%99%E4%B8%AA%E6%8F%92%E4%BB%B6%EF%BC%9A">http://xxx.yy.com/2020/07/06/hello-world如果文件名是中文在解码后就是一大串。如果你想要一个漂亮的随机码链接，可以使用abbrlink这个插件：</a></p><p>安装使用abbrlink插件<br><code>npm install hexo-abbrlink --save</code></p><p>修改_config.yml文件 # URL下方:</p><pre><code>permalink: posts/:abbrlink/permalink_defaults:pretty_urls:    trailing_index: true      # Set to false to remove trailing &#39;index.html&#39; from permalinks    trailing_html: true        # Set to false to remove trailing &#39;.html&#39; from permalinksabbrlink: # abbrlink config 文章随机永久链接设置  alg: crc32  #可选算法 crc16(default) and crc32  rep: hex    #可选进制 dec(default) and hex</code></pre><p>示例：</p><pre><code>crc16 &amp; hexhttps://test.com/posts/55c6.htmlcrc16 &amp; dechttps://test.com/posts/43212.htmlcrc32 &amp; hexhttps://test.com/posts/6ec16a2c.htmlcrc32 &amp; dechttps://test.com/posts/1521457752.html</code></pre><p>【注】据说使用插件后原文章阅读人数和评论会变为0，适合新站。</p><h3 id="添加网站分析功能"><a href="#添加网站分析功能" class="headerlink" title="添加网站分析功能"></a>添加网站分析功能</h3><p>网站分析的作用就是查看网站的访问数据。网络上有好几个提供网站分析服务的公司，例如百度统计、腾讯分析、谷歌分析等。这里用的百度统计。<br>进入 百度统计 注册登陆，点击网站统计，新增一个网站，输入对应的信息点确定。然后会返回一堆代码，其中有一串很长的16进制数，那个就是你的网站统计代码，把它复制粘贴进“_config.butterfly.yml”文件中的以下位置：<br><code>baidu_analytics: 你的网站统计代码</code><br>然后就可以在百度统计中查看你的网站统计数据了。</p><h3 id="添加网站本地搜索功能"><a href="#添加网站本地搜索功能" class="headerlink" title="添加网站本地搜索功能"></a>添加网站本地搜索功能</h3><p>示例<br>安装搜索引擎：<br><code>npm install hexo-generator-search --save</code><br>修改主题配置文件“_config.butterfly.yml”<br>    local_search:<br>      enable: true<br>    如果需要自定义搜索功能，在网站配置文件“_config.yml”中加入</p><pre><code>search:  path: search.xml    # 生成的搜索文件的路径  field: post         # 搜索范围：post帖子、site页面、所有all  content: true       # 是否检索每篇文章的内容  template: ./search.xml    # 可选通往自定义 XML 模板的路径</code></pre><h3 id="更换网站背景以及各种图片"><a href="#更换网站背景以及各种图片" class="headerlink" title="更换网站背景以及各种图片"></a>更换网站背景以及各种图片</h3><p>修改 Hexo 根目录下的“_config.butterfly.yml”文件。所有图片放在Hexo根目录source/images文件夹中。</p><pre><code># 图片设置 图片放在Hexo根目录source/images文件夹中# 页面顶部图的获取顺序：各自配置的 top_img &gt; 配置文件的 default_top_img# 文章页顶部图的获取顺序：各自配置的 top_img &gt; cover &gt; 配置文件的 default_top_imgfavicon: /images/favicon.png                # 網站圖標（浏览器页签显示）avatar:                  img: /images/avatar.png                   # 頭像  effect: false                             # 头像会一直转圈disable_top_img: false                      # 屏蔽页面顶部图index_img: /images/index.jpg                # 主页顶部图default_top_img: /images/default_top.jpg    # 各页面/文章默认顶部图archive_img:  /images/archive.jpg           # 归档页面的顶部图tag_img:  /images/default_tag.jpg           # 标签子页面的默认顶部图category_img:  /images/default_category.jpg # 分类子页面的默认顶部图tag_per_img:                                # 单独设置标签子页面顶部图，格式： tag name: xxxxxcategory_per_img:                           # 单独设置标资料页面顶部图，格式： category name: xxxxx# 标签主页面的顶部图需要去source/tags/indes.md文件里修改# 分类主页面的顶部图需要去source/categories/indes.md文件里修改</code></pre><h3 id="新建各种页面"><a href="#新建各种页面" class="headerlink" title="新建各种页面"></a>新建各种页面</h3><p>例如：<br>首先修改 Hexo 根目录下的“_config.butterfly.yml”文件。</p><pre><code>menu:       # 设置网页菜单  首页: / || fas fa-home  文章||fas fa-book:    时间轴: /archives/ || fas fa-archive    标签: /tags/ || fas fa-tags    分类: /categories/ || fas fa-folder-open  资源库||fas fa-list:    照片: /Gallery/ || fas fa-images    音乐: /music/ || fas fa-music    电影: /movies/ || fas fa-video  留言板: /messageboard/ || fas fa-comment-dots    链接: /link/ || fas fa-link  关于: /about/ || fas fa-heart</code></pre><p>然后新建原来没有的页面文件。页面文件都放在Hexo根目录/source文件夹里的各个文件夹里</p><p>举例，要创建个人介绍页面，在about文件夹里新建“index.md”文件，使用编辑器打开，输入</p><pre><code>---title: 关于date: 2021-09-28 20:25:32top_img: /images/about.jpg---个人介绍balabalabala</code></pre><p>分类页面</p><pre><code>---title: 分  类date: 2021-09-23 19:48:01type: &quot;categories&quot;top_img: /images/category.jpg---</code></pre><p>标签页面</p><pre><code>---title: 标  签date: 2021-09-23 19:46:34type: &quot;tags&quot;top_img: /images/tag.jpg---</code></pre><p>友情链接页面</p><pre><code>---title: 友 情 链 接date: 2021-09-23 19:49:00type: &quot;link&quot;top_img: /images/link.jpg---</code></pre><p>留言板页面</p><pre><code>---title: 留 言 板date: 2021-09-28 15:45:19top_img: /images/messageboard.jpg---</code></pre><h3 id="添加Twikoo评论功能"><a href="#添加Twikoo评论功能" class="headerlink" title="添加Twikoo评论功能"></a>添加Twikoo评论功能</h3><p>目前Hexo支持两种免登录评论系统，Valine和Twikoo，听说Twikoo稳定一些，还支持评论点赞功能。Twikoo有四种部署方式，我选择的是目前免费的一种——使用Vercel静态网站托管平台 + MongoDB分布式数据库来部署。(注：注册和配置时需要魔法上网，完成后就不需要)。其他的方法（腾讯云等）参考这里：Twikoo 中文文档</p><p>首先在“_config.butterfly.yml”文件的导航菜单代码中插入留言板一行</p><p><code>留言板: /messageboard/ || fas fa-comment-dots</code><br>请看Twikoo 中文文档</p><p>2023.1.21更新：目前Vercel因为DNS污染问题被墙了，需要换种托管方案。待解决。</p><h3 id="修改文字-卡片背景颜色以及透明化"><a href="#修改文字-卡片背景颜色以及透明化" class="headerlink" title="修改文字/卡片背景颜色以及透明化"></a>修改文字/卡片背景颜色以及透明化</h3><p>查了很多文章，发现还是自己的代码最简洁。</p><p>Hexo根目录source/css文件夹中新建css文件，命名为card.bg.css。键入：<br>    /* 所有页面背景 */</p><pre><code>:root &#123;--card-bg: rgba(240, 237, 228, 0.9);&#125;/* 夜间模式所有页面背景 */[data-theme=&#39;dark&#39;] &#123;--card-bg: rgba(25, 28, 31, 0.9);&#125;/* rgba颜色参数可以百度，0.9代表不透明度90%，VSCode里可以直接用调色盘选色 */</code></pre><h3 id="添加3D小地图显示历史访客的位置"><a href="#添加3D小地图显示历史访客的位置" class="headerlink" title="添加3D小地图显示历史访客的位置"></a>添加3D小地图显示历史访客的位置</h3><p>访问网址 Welcome to RevolverMaps | RevolverMaps - Free 3D Visitor Maps<br>复制代码。注意，最下面代码旁边有一个选项，选择“new map”还是“update”，初次使用选择new map，如果是想要更改样式，那么就选择update，否则的话之前的访客数据会丢失。<br>在Hexo根目录/source/_date文件夹内新建“widget.yml”文件，输入：<br>&emsp;&emsp;bottom:<br>&emsp;&emsp;&emsp;&emsp;- class_name: user-map<br>&emsp;&emsp;&emsp;&emsp;id_name: user-map<br>&emsp;&emsp;&emsp;&emsp;name: 访客地图<br>&emsp;&emsp;&emsp;&emsp;icon: fas fa-map-pin<br>&emsp;&emsp;&emsp;&emsp;order:<br>&emsp;&emsp;&emsp;&emsp;html: ‘你的小地图代码’<br>这样小地图就会显示在侧边栏的最底部。也可以选择其他地方，这里不赘述了。</p><h3 id="添加友情链接"><a href="#添加友情链接" class="headerlink" title="添加友情链接"></a>添加友情链接</h3><p>在Hexo根目录/source/_date文件夹内修改“link.yml”文件。具体打开文件后里面有示例。</p><h2 id="更新计划："><a href="#更新计划：" class="headerlink" title="更新计划："></a>更新计划：</h2><h3 id="网页加载进度条"><a href="#网页加载进度条" class="headerlink" title="网页加载进度条"></a>网页加载进度条</h3><h3 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h3>]]></content>
      
      
      <categories>
          
          <category> 个人网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>飞行札记（三）</title>
      <link href="/posts/95065b96/"/>
      <url>/posts/95065b96/</url>
      
        <content type="html"><![CDATA[<h1 id="飞行札记·000003-Fake-·追忆：大停电"><a href="#飞行札记·000003-Fake-·追忆：大停电" class="headerlink" title="飞行札记·000003(Fake)·追忆：大停电"></a>飞行札记·000003(Fake)·追忆：大停电</h1><p>&emsp;&emsp;🕳️</p><p>&emsp;&emsp;·飞船维护周期第42天·</p><p>&emsp;&emsp;站在动力反应堆控制室的舷窗向船尾望去，地球的影子就藏在这几个月来未曾变化过的星空里。不由得想起卡尔萨根在他的《暗淡蓝点》一书中发出的感叹：“我们是在平静的海洋上航行的水手，我们感受到了微风的吹拂。” 1990年，旅行者一号深空探测器飞跃土星轨道向银河系中心前进，在距离地球64亿千米的远方传回了那张著名的“暗淡蓝点”。而现在，地球的身影已完全隐没在这星空中，一百多年前的那场天崩地坼的灾难，甚至无法在这寂静的太空中泛起一丝涟漪。</p><p>&emsp;&emsp;一个半月过去了，庇护所号像一只在太空中滑行的长矛一样，安稳而平静。因为主发动机关机，没有长长的淡蓝色尾迹，让人有一种静滞在太空中的错觉。</p><p>&emsp;&emsp;21世纪末，人类掌握了量子计算技术，似乎还没有做好准备的人类社会直接迎来了第二次信息爆炸。伴随着网络信息量的指数级增长，新型数据存储和压缩技术也应运而生，与此同时，用于数据处理和数据存储的能源需求剧增，人们愈发意识到生存竞争的本质就是能源争夺，甚至有一些国家提出了「星环计划」试图沿着地球赤道建造一圈巨型太阳能电池板。能源紧缺的问题从来没有来的这么突然过，仿佛极端天气来临前天空骤然变暗。得不到能源供给的人类社会就像高速转动的发动机突然松了油门，在黑暗中抽动、残喘。很快，能源危机的阴影笼罩了整个世界。几个拥有全球核打击能力的头号大国开始宣布进入对外戒严状态，紧张的局势一触即发。继1962年“古巴导弹危机”之后，人类存亡再一次走到了最危险的时刻。[^1]</p><p>&emsp;&emsp;2107年冬，一篇科研文章上传至全球紧急广播系统，并通过最高通信优先级向全世界广播。这篇文章宣告了长时程可控核聚变技术取得了突破性进展，并表示人类已经具备建造大型聚变反应堆的科技和能力。文章中还公开了上百页的反应堆系统设计图纸，将所有的技术细节一一展示。这次广播像是突然燃起一团火，照亮了黑暗中龇牙咧嘴的人们。发布文章的组织没有公开自己的身份，外界只能通过卫星数据分析得出这个组织的模糊地点是98.2°N, 39.7°E，除此之外没有任何相关信息。</p><p>&emsp;&emsp;在这篇文章的指引下，全世界各国纷纷开始开展核聚变电站技术的研究。2117年，C国宣布人类第一座聚变试验堆成功发电。一年后，第一座示范聚变电站正式并网。陆续地，许多国家宣布建成聚变电站。有的国家甚至同时批下了30多个聚变电站项目。成千上万座反应堆像小小的卵壳在地表孵化。人类如同饥饿的孩子，迫不及待地从原子中汲取能量。<br>在后来几年内，聚变发电很快占到了世界电能供应的大头，能源危机的阴云就这样消散了，如同它来时一样快。能源问题的解决使得一系列生存矛盾得到了缓解，人类开始将重心放到科学探索上。得益于量子技术，卡在半导体发展尽头的人类仿佛打开了新世界的大门，各个领域的科技发展十分迅速，尤其是材料、生物和信息这三个大方向。</p><p>&emsp;&emsp;科学的高速发展极大地推进了人类对新事物的探索，从古至今人类对于“新事物”有两种强烈的情感，一是探索欲，二是恐惧。刚刚从黑暗中被拉出来的人类，就一头扎进了未知的海洋里，这是好还是不好呢？无人评判，也无从评判，谁也不能从超越人类的视角来看待这个世界。但我仍然喜欢把那种观点挂在嘴边，人类是个在一滩浑水中摸着石头过河的孩子，他不能停也无法停下来。毕竟这个世界没有先知。</p><p>[^1]公元2107-2117这十年也被后来的人称为“大停电（Blackout）”。</p><p>&emsp;&emsp;/ 2022.04.26</p>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 飞行札记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>飞行札记（二）</title>
      <link href="/posts/d818f8c4/"/>
      <url>/posts/d818f8c4/</url>
      
        <content type="html"><![CDATA[<h1 id="飞行札记·000002·矛盾螺旋"><a href="#飞行札记·000002·矛盾螺旋" class="headerlink" title="飞行札记·000002·矛盾螺旋"></a>飞行札记·000002·矛盾螺旋</h1><p>&emsp;&emsp;🕳️</p><p>&emsp;&emsp;·飞船维护周期第29天。·</p><p>&emsp;&emsp;“根据广义相对论，我们能感知到的一切都处于时空光锥之内，换句话说即使拥有全宇宙最强的算力，拥有获取所有信息的能力，但仍然会存在一个极限。光锥之内才是宇宙，光锥之外无意义。”</p><p>&emsp;&emsp;“你就爱说这些有的没的。”机械师B5309拿起杯子咕嘟了一口，“第四区供给的洗发水好好闻阿，被子也有让人舒适的味道。让我想起了陆地。”</p><p>&emsp;&emsp;抛离式货舱螺栓爆破的震动沿着飞船的龙骨从墙壁里传递过来，这种巨大的能量总让我心头一热。我喜欢的东西多多少少有点奇怪，比如今天在反应堆里看到的超大号螺母，让人好奇这到底是用在什么猛兽身上的？维护周期已经进行了将近一个月，要说感觉如何，也没觉得特别不舒服。机械师B5309是我的同事，我们同属一个工作站小组，因为都喜欢在结束工作后去喝酒，所以经常一起聊天。</p><p>&emsp;&emsp;“是不是忘关遮光板了？那是螨虫被烤焦的味道。” “你在地球生活过？” 我问道。</p><p>&emsp;&emsp;“嗯，妈妈在地球生下我，我们一起生活直到我6岁，然后就去了华北轨道发射站。”</p><p>&emsp;&emsp;“这倒是头一回听你说。你对妈妈印象最深的一句话是什么？”</p><p>&emsp;&emsp;“呃，我想想…”B5309看了看平整的金属天花板，“好像也没什么特别深刻的，大概是她叫我的名字吧，我想起她时耳边就会浮现出她叫我名字的声音。”</p><p>&emsp;&emsp;“你知不知道，”我喝了一口，“无论语种和语速，人类语言的信息传输速率约为39bits/s，是摩尔斯电码的两倍[^1]。所以你这段记忆的容量不超过30bits”</p><p>&emsp;&emsp;“你tm…”B5309的表情就像表情包，不过马上又恢复了正常，“但每次我想起来都会感到很亲切，也会勾起我许多回忆。”</p><p>&emsp;&emsp;“合理。这是大脑被特定信号激发而产生的电化学反应。如果你把那个声音拷进我大脑，只会成为背景噪声。”</p><p>&emsp;&emsp;“你这人怎么这么讨厌？我看你的脑子现在需要一些啤酒…”B5309举起了她的绿水晶杯子。我也举起杯子，清脆的碰撞声。</p><p>&emsp;&emsp;“你知道我的杯子叫什么吗？”</p><p>&emsp;&emsp;“你该不会也给你的杯子取名字了吧哈哈哈哈哈哈哈好中二”</p><p>&emsp;&emsp;“叫‘矛盾螺旋’。”</p><p>&emsp;&emsp;“阿？不会还有设定吧。”</p><p>&emsp;&emsp;我比了一个宇宙通用手势，“是从一个梦开始的，具体也分不清是不是梦。”我开始回忆，“我梦见走在放学回家的路上，边走边想昨天在路边看见的橙子是多少钱一斤，怎么也想不起来，正绞尽脑汁，突然一个激灵，我为什么要想这个问题？等等，我毕业好多年了，为什么会走在放学的路上，橙子又是在哪里看到的？此时我已微微睁开眼，发现自己正躺在家屋顶的遮阳棚下睡睡觉，太阳把四周的空气烤得湛蓝。然而这种“抽离”并没有结束，屋顶？午觉？这时候我才完全清醒过来，我躺在飞船的卧室里，现在是晚上4点，α1星的蓝光透过舷窗照进了房间，格外耀眼。后来…”</p><p>&emsp;&emsp;“59秒，嗯，你这个梦不超过0.3kb”B5309满意地插了一句。</p><p>&emsp;&emsp;“不予置否。”我接着讲，“后来也经常做这样奇怪的梦，然后我就想，为什么一旦醒过来那些构造好的逻辑体就像劈竹子一样一层一层地迅速崩解掉呢？有没有可能达到一种状态，让构造的速度比瓦解快，从而让这些逻辑体持续地存在下去？”</p><p>&emsp;&emsp;“又异想天开了。”B5309说，“但也非不可能，除非大脑一直处于昏睡的状态。”</p><p>&emsp;&emsp;“那如果做一点小小的加工，让最后一层的逻辑体和现实世界关联起来呢？”</p><p>&emsp;&emsp;“你是说，让它们像一个…循环？”</p><p>&emsp;&emsp;“聪明。人脑沉睡，苏醒，又沉睡，如此往复，好比真空中的电磁波，变化的电场和磁场交替耦合…”</p><p>&emsp;&emsp;“由近及远，以有限的速度在空间中传播。我知道，麦克斯韦方程组。”B5309又抢了一句，“但这不可能实现吧，因为现实充满了不确定性，比如混沌现象，蝴蝶效应等等，你如何保证这束“光”一直存在下去？”</p><p>&emsp;&emsp;“人类能活多久？”我问。</p><p>&emsp;&emsp;“130~150地球年，约50000天。”</p><p>&emsp;&emsp;“所以只需要提供一个“干净”的环境，让这个循环在里面运行50000次就行了。”<br>“像‘缸中大脑’？”</p><p>&emsp;&emsp;“有这个味道，但那只是一个狭义的例子。”</p><p>&emsp;&emsp;“这个想法有点意思，但仔细想想有些骇人。”B5309摸了摸自己的胳膊。</p><p>&emsp;&emsp;“义肢是没有鸡皮疙瘩功能的，所以你不用去捋…”</p><p>&emsp;&emsp;“想死？”</p><p>&emsp;&emsp;“暂时还…哎哎哎疼疼疼…”<br>&emsp;&emsp;…</p><p>&emsp;&emsp;飞船维护周期第30天。</p><p>&emsp;&emsp;摘下防护眼镜，视野瞬间变为冰冷的蓝色，眩晕也感随之而来。已经习惯配戴这种眼镜了，偏橘红色的视野让人心安。四周的墙壁时不时传来沉闷的震动，货仓的分离工作还在进行着。</p><p>&emsp;&emsp;昨晚也做梦了，梦见在书店里寻寻觅觅，找出了一本讲拓扑场论的书，红色的封面。拿到卧室里翻看，黑暗中出现了一个发光的粒子，然后又分裂出了五个相同的粒子。在空间中移动着，排列出了一个立方体结构。接着，这个立方体开始扭转，翻扯成各种形状，然而始终没有再出现什么质的变化，不知为何它们越来越复杂的运动轨迹看起来像是一种挣扎，我也因为这种挣扎而感到难受。</p><p>&emsp;&emsp;/ 2022.04.20</p><p>[^1]: <a href="https://www.science.org/doi/10.1126/sciadv.aaw2594?continueFlag=a53fe581e4a32d55085a829747708a98">Different languages, similar encoding efficiency: Comparable information rates across the human communicative niche</a> Science Advances Vol.5, No.9 2019</p>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 飞行札记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>飞行札记（一）</title>
      <link href="/posts/e80e141c/"/>
      <url>/posts/e80e141c/</url>
      
        <content type="html"><![CDATA[<h1 id="🕳️飞行札记-·-000001-·-寂静之声"><a href="#🕳️飞行札记-·-000001-·-寂静之声" class="headerlink" title="🕳️飞行札记 · 000001 · 寂静之声"></a>🕳️飞行札记 · 000001 · 寂静之声</h1><p>&emsp;&emsp;🕳️</p><p>&emsp;&emsp;·飞船维护周期第3天。·</p><p>&emsp;&emsp;如果网络里的幽灵真的存在，那会有意思得多吧——才进行软体升级几天的设备已经出现了一些微妙的bug。飞船正处于维护和燃料更新周期中，乘客和大部分成员都已经转移走了，只留下一些工人和专业人员。虽说是维护周期，但为了保证时间效益飞船仍处于高速航行的状态，只是没有任何推进动力，在宇宙空间中滑行。为了等待核心达到开机所需要的条件，这艘叫做庇护所号的奥卡托级深空运输舰还将在这种无动力状态下滑行6个月。</p><p>&emsp;&emsp;维护周期中飞船的特点就是：安静。一切都太静了。几乎所有大型系统和设备都处于停运状态，除了通过舱室时闸门开合的咔嚓声，你甚至能听见墙壁里电流在嘤嘤作响。在以年为单位的航程里，船员们最害怕的一是看不见任何星光的太空，二就是完全的寂静。这两者任何一个都会让人发疯。这里讲一个小小的科普，通常在正常巡航状态下，也就是飞船动力反应堆开机时，堆本体以及各个系统的运转会将整个飞船的背景噪声提升至40分贝左右，这是一个令人舒适的声音范围。曾经在地球上有一个叫做“微软”的公司做出了一个号称是“地球上最安静”的房间，创造了-20分贝的最低噪音水平记录，据说人类难以在其中待上一个小时。而在太空，几乎任何一个地方都能轻而易举地打破这个最低声音记录。飞船上的这种寂静不是你开着音响播放一点音乐就能掩盖的，它渗透在每一个角落，甚至渗透在你的脑海里，任何你身体里的声音都会被放大，你开始注意自己的每一次呼吸、心跳…。有时你不得不去击打什么东西制造出一些声音来减少这种窒息感让自己保持清醒。你能想象“对声音的饥饿感”是什么感觉吗？就像饿了必须要吃东西一样，你的耳朵需要声音。实际上对于这个问题早有规定——飞船维护周期间禁止独行，人与人（或人工智能）之间必须保持足够的音频交流。</p><p>&emsp;&emsp;实际上这种“寂静”在人类早期的太空探索中完全不存在，甚至恰恰相反。在曾经的地球轨道实验室「国际太空站」里，各个舱室的分贝数达到了70至80分贝，一些长期在轨的宇航员因此患上了听力衰退和失聪。由于在太空中各种振动无法向外界传递，只能在飞船里来回传播，飞船的材料又无法很快地吸收这些机械波所以导致噪声严重。这种现象在「新大航海时代」的初期就被解决了——几位杰出的科学家采用新型材料和特殊的工程结构，将用以驱动超大型飞船的动力系统噪声完美地吸收和再利用了，这可以说是一项革命性的发明，直接推动了新大航海时代的发展。至今几乎所有的远航船都采用了这种方案。它的“副作用”就是，声音的吸收效果太好了，这一点在飞船维护周期期间尽显无疑。</p><p>&emsp;&emsp;拿着杯子到飞船的最下层，位于动力反应堆隔壁的藏酒室。最近确实有些奇怪，这里的酒龙头有一半放出来的是防冻液。按照往常来说这种机械故障在几天之内就会被修复，但是这个错乱已经持续了好一阵子，大概是又有“酒耗子”在飞船的哪个隐秘隔间里安家了？还有人说晚上11点之后从船尾右侧的备用能源存储站甬道里通过时会听见稀稀落落的钢琴声，谁会在零下20摄氏度的地方弹琴呢？总而言之，维护周期中的飞船经常会发生这些奇奇怪怪的事件，这也是船员和乘客们之间经久不衰的话题，略有“都市传说”的味道。</p><p>&emsp;&emsp;/ 2022.04.09</p>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 飞行札记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
